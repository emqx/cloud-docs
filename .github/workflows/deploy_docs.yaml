name: Deploy Docs

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'emqx'
    steps:
    - name: clone docs
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: docs-files

    - name: clone frontend
      uses: actions/checkout@v2
      with:
        repository: 'emqx/docs-emqx-com-frontend'
        token: ${{ secrets.CI_GIT_TOKEN }}
        path: frontend

    - name: use node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.15

    - name: use python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'

    - name: set env
      run: |
         BRANCH=$(echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g")
         if [ "$BRANCH" = "master" ];then
         VERSION="latest"
         else
         VERSION=$BRANCH
         fi
         echo "DOCS_BRANCH=$BRANCH" >> $GITHUB_ENV
         echo "VERSION=$VERSION" >> $GITHUB_ENV
         echo "DOCS_TYPE=cloud" >> $GITHUB_ENV

    - name: remove unused files
      run: |
        cd docs-files
        python3 .github/scripts/remove_unused.py $(pwd)

    - name: move files
      run: |
        rm frontend/docs/en/README.md || true
        rm frontend/docs/zh/README.md || true
        rm frontend/docs/*.md || true
        rm frontend/README.md
        mkdir -p frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        mkdir -p frontend/docs/.vuepress/public/api/
        cp -r docs-files/en_US/* frontend/docs/en/${DOCS_TYPE}/${VERSION}/
        cp -r docs-files/zh_CN/* frontend/docs/zh/${DOCS_TYPE}/${VERSION}/
        cp docs-files/directory.json frontend/docs/.vuepress/config/directory.json

    - name: generate version config
      run: |
        cd docs-files
        python3 .github/scripts/generate_version.py $(git tag | egrep "v[0-9](\.[0-9])*$" | xargs echo -n) > ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json
        cat ../frontend/docs/.vuepress/public/api/${DOCS_TYPE}_versions.json

    - name: build docs
      run: |
        cd frontend
        yarn && yarn build

    - name: upload dist
      run: |
        pip3 install coscmd
        coscmd config -a ${{ secrets.TENCENT_COS_ID }} -s ${{ secrets.TENCENT_COS_KEY }} -b docs-1302406139 -r ap-shanghai
        coscmd delete -r -f en/${DOCS_TYPE}/${VERSION} || true
        coscmd delete -r -f zh/${DOCS_TYPE}/${VERSION} || true
        coscmd config -a ${{ secrets.TENCENT_COS_ID }} -s ${{ secrets.TENCENT_COS_KEY }} -b docs-1302406139 -e cos.accelerate.myqcloud.com
        cd frontend/docs/.vuepress/dist/
        zip -rq docs-dist-${DOCS_TYPE}-${VERSION}.zip ./
        coscmd upload docs-dist-${DOCS_TYPE}-${VERSION}.zip docs-zip/
        sleep 90

    - name: flush cdn
      run: |
        pip3 install tccli
        tccli configure set secretId ${{ secrets.TENCENT_COS_ID }}
        tccli configure set secretKey ${{ secrets.TENCENT_COS_KEY }}
        tccli configure set region ap-shanghai
        tccli cdn PurgePathCache --cli-unfold-argument --Paths https://docs.emqx.com/zh/${DOCS_TYPE}/${VERSION}/ https://docs.emqx.com/en/${DOCS_TYPE}/${VERSION}/ --FlushType delete
        tccli cdn PurgeUrlsCache --cli-unfold-argument --Urls https://docs.emqx.com/api/${DOCS_TYPE}_versions.json https://docs.emqx.com/sitemap_${DOCS_TYPE}_${VERSION}.xml

    - name: update search index
      if: env.VERSION == 'latest'
      uses: Swilder-M/docsearch-scraper-simple@v3
      env:
        APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
        API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
      with:
        docs_type: ${{ env.DOCS_TYPE }}
        docs_version: ${{ env.VERSION }}
